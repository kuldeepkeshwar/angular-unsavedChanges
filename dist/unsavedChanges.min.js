"use strict";angular.module("unsavedChanges",["resettable"]).provider("unsavedWarningsConfig",function(){var g=this;var e=false;var b=true;var d=["$locationChangeStart","$stateChangeStart"];var c="You will lose unsaved changes if you leave this page";var a="You will lose unsaved changes if you reload this page";var f="$dirty";Object.defineProperty(g,"navigateMessage",{get:function(){return c},set:function(h){c=h}});Object.defineProperty(g,"reloadMessage",{get:function(){return a},set:function(h){a=h}});Object.defineProperty(g,"useTranslateService",{get:function(){return b},set:function(h){b=!!(h)}});Object.defineProperty(g,"routeEvent",{get:function(){return d},set:function(h){if(typeof h==="string"){h=[h]}d=h}});Object.defineProperty(g,"logEnabled",{get:function(){return e},set:function(h){e=!!(h)}});Object.defineProperty(g,"dirtynessProperty",{get:function(){return f},set:function(h){if(typeof h==="string"&&h!==""){f=h}}});this.$get=["$injector",function(i){function j(k){if(i.has("$translate")&&b){return i.get("$translate").instant(k)}else{return false}}var h={log:function(){if(console.log&&e&&arguments.length){var k=[].slice.call(arguments);if(typeof console.log==="object"){log.apply.call(console.log,console,k)}else{console.log.apply(console,k)}}}};Object.defineProperty(h,"useTranslateService",{get:function(){return b}});Object.defineProperty(h,"reloadMessage",{get:function(){return j(a)||a}});Object.defineProperty(h,"navigateMessage",{get:function(){return j(c)||c}});Object.defineProperty(h,"routeEvent",{get:function(){return d}});Object.defineProperty(h,"logEnabled",{get:function(){return e}});Object.defineProperty(h,"dirtynessProperty",{get:function(){return f}});return h}]}).service("unsavedWarningSharedService",["$rootScope","unsavedWarningsConfig","$injector","$window","unsavedChangesIgnoreElement",function(k,c,l,d,g){var j=this;var a=[];var h=true;var e=[];this.allForms=function(){return a};function i(){h=true;angular.forEach(a,function(n,m){c.log("Form : "+n.$name+" dirty : "+n[c.dirtynessProperty]);if(n[c.dirtynessProperty]){h=false}});return h}this.init=function(m){if(a.length===0){f()}c.log("Registering form",m);a.push(m)};this.removeForm=function(n){var m=a.indexOf(n);if(m===-1){return}a.splice(m,1);c.log("Removing form from watch list",n);if(a.length===0){b()}};function b(){c.log("No more forms, tearing down");angular.forEach(e,function(m){m()});e=[];d.onbeforeunload=null}this.confirmExit=function(){if(!i()&&!g.element){g.element=null;return c.reloadMessage}g.element=null;k.$broadcast("resetResettables");b()};function f(){c.log("Setting up");d.onbeforeunload=j.confirmExit;var m=c.routeEvent;angular.forEach(m,function(n){var o=k.$on(n,function(q,p,r){c.log("user is moving with "+n);if(!i()&&!g.element){c.log("a form is dirty");if(!confirm(c.navigateMessage)){c.log("user wants to cancel leaving");q.preventDefault()}else{c.log("user doesn't care about loosing stuff");k.$broadcast("resetResettables")}}else{c.log("all forms are clean")}g.element=null});e.push(o)})}}]).directive("unsavedWarningClear",["unsavedWarningSharedService",function(a){return{scope:{},require:"^form",priority:10,link:function(d,c,b,e){c.bind("click",function(f){e.$setPristine()})}}}]).directive("unsavedChangesIgnore",["unsavedChangesIgnoreElement",function(b){function a(c){var d=c.target||c.srcElement;if(d.href&&d.href!==""){b.element=d}}return{restrict:"A",link:function(e,d,c){d.bind("click",a)}}}]).value("unsavedChangesIgnoreElement",{element:null}).directive("unsavedWarningForm",["unsavedWarningSharedService","$rootScope",function(b,a){return{scope:{},require:"^form",link:function(e,d,c,g){var f=0;while(d[0].tagName!=="FORM"&&f<3){f++;d=d.parent()}if(f>=3){throw ("unsavedWarningForm must be inside a form element")}b.init(g);d.bind("submit",function(h){if(g.$valid){g.$setPristine()}});d.bind("reset",function(h){h.preventDefault();var i=angular.element(d[0].querySelector("[resettable]"));if(i.length){e.$apply(i.triggerHandler("resetResettables"))}g.$setPristine()});e.$on("$destroy",function(){b.removeForm(g)})}}}]);angular.module("resettable",[]).directive("resettable",["$parse","$compile","$rootScope",function(d,c,b){return{restrict:"A",link:function a(m,g,j,e){var h,k,l;j.$observe("ngModel",function(n){k=d(j.ngModel);h=k.assign;l=k(m)});var i=function(){h(m,l)};g.on("resetResettables",i);var f=m.$on("resetResettables",i);m.$on("$destroy",f)}}}]);